#naming the application
spring.application.name=order-service
spring.main.banner-mode=off
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#the port on with the db is running
#schema name 'order-service'
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=mysql
#=none for production apps
#=create-drop - don't use for production code apps
spring.jpa.hibernate.ddl-auto=update
#change the server port to 8081
#because the product service is running already on 8080
server.port=8081
logging.level.root=info
eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka
#To check the Actuator health endpoint go to: http://localhost:8081/actuator/health
#Enabling the Circuit Breakers endpoints in the Actuator to track the health metrics
management.health.circuitbreakers.enabled=true
#Will expose all endpoints, because by default it will only expose the health metrics endpoints
management.endpoints.web.exposure.include=*
#By default, is set to never, but we want to see the health details
management.endpoint.health.show-details=always

#Resilience4j Properties
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true

#Resilience4 Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4 Retry Properties
#we have to retry 3 more times
resilience4j.retry.instances.inventory.max-attempts=3
#if we dont get the response in wait 5s retry for 3 times
# if the retry is still not working we will let the Circuit Breaker to
# handle the actual request flow
resilience4j.retry.instances.inventory.wait-duration=5s

spring.zipkin.base-url=http://localhost:9411
# Trace a hundred percent of the requests which receiving our system
spring.sleuth.sampler.probability=1.0